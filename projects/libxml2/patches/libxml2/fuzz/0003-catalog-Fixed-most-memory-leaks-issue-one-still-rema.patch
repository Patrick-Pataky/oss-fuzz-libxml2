From 1077813fb997bb1519d1d145bf7b3bf9e5c32a30 Mon Sep 17 00:00:00 2001
From: Patrick-Pataky <patrick.pataky@epfl.ch>
Date: Sat, 10 May 2025 00:37:42 +0200
Subject: [PATCH 3/3] [catalog]: Fixed most memory leaks issue, one still
 remains

---
 fuzz/catalog.c | 71 +++++++++++---------------------------------------
 1 file changed, 15 insertions(+), 56 deletions(-)

diff --git a/fuzz/catalog.c b/fuzz/catalog.c
index b16864af..c4d1fcf7 100644
--- a/fuzz/catalog.c
+++ b/fuzz/catalog.c
@@ -152,7 +152,9 @@ setStr(int offset, xmlChar *str) {
 
 static void
 moveStr(int offset, xmlChar *str) {
-    if (xmlStrlen(str) > 1000) {
+    if (str == NULL) {
+        setStr(offset, NULL);
+    } else if (xmlStrlen(str) > 1000) {
         setStr(offset, NULL);
         xmlFree(str);
     } else {
@@ -285,6 +287,8 @@ LLVMFuzzerInitialize(int *argc ATTRIBUTE_UNUSED,
                      char ***argv ATTRIBUTE_UNUSED) {
     xmlFuzzMemSetup();
     xmlInitParser();
+    xmlCatalogSetDebug(0);
+    xmlCatalogSetDefaults(XML_CATA_ALLOW_ALL);
     xmlSetGenericErrorFunc(NULL, xmlFuzzErrorFunc);
 
     return 0;
@@ -295,19 +299,16 @@ LLVMFuzzerTestOneInput(const char *data, size_t size) {
     size_t failurePos;
     int i;
 
-    if (size > 1000)
-        return 0;
-
     memset(vars, 0, sizeof(*vars));
 
-    xmlInitializeCatalog();
-    xmlCatalogSetDefaults(XML_CATA_ALLOW_ALL);
-
     xmlFuzzDataInit(data, size);
 
     failurePos = xmlFuzzReadInt(4) % (size * 50 + 10);
     xmlFuzzInjectFailure(failurePos);
 
+    if (size > 1000)
+        goto end;
+
     /*
      * Interpreter loop
      *
@@ -378,9 +379,8 @@ LLVMFuzzerTestOneInput(const char *data, size_t size) {
             case OP_CATALOG_GLOBAL_ADD: {
                 startOp("xmlCatalogAdd");
                 incIntIdx();
-                setInt(0,
-                    xmlCatalogAdd(getStr(0), getStr(1), getStr(2))
-                );
+                int result = xmlCatalogAdd(getStr(0), getStr(1), getStr(2));
+                setInt(0, result);
                 endOp();
                 break;
             }
@@ -439,49 +439,6 @@ LLVMFuzzerTestOneInput(const char *data, size_t size) {
                 break;
             }
 
-            case OP_TEST_XML_CATALOG_1: {
-                startOp("testXMLCatalogInternal1");
-
-                xmlCatalogPtr catalog = xmlNewCatalog(0);  // XML catalog
-                incCatalogIdx();
-                setCatalog(0, catalog);
-
-                if (catalog != NULL) {
-                    // Add a variety of entry types to test different code paths
-                    xmlACatalogAdd(catalog, BAD_CAST "system",
-                                getStr(0), getStr(1));
-                    xmlACatalogAdd(catalog, BAD_CAST "public",
-                                getStr(2), getStr(3));
-                    xmlACatalogAdd(catalog, BAD_CAST "rewriteSystem",
-                                getStr(4), getStr(5));
-                    xmlACatalogAdd(catalog, BAD_CAST "delegatePublic",
-                                getStr(6), getStr(7));
-
-                    incStrIdx();
-                    xmlChar *resolved = xmlACatalogResolve(catalog, getStr(2), getStr(0));
-                    if (resolved != NULL)
-                        oomReport = 0;
-                    moveStr(0, resolved);
-
-                    // Test recursion paths
-                    xmlCatalogPtr nestedCatalog = xmlNewCatalog(0);
-                    if (nestedCatalog != NULL) {
-                        xmlACatalogAdd(catalog, BAD_CAST "nextCatalog",
-                                    BAD_CAST "nested", BAD_CAST "nested");
-
-                        incIntIdx();
-                        xmlChar *result = xmlACatalogResolve(catalog, getStr(6), getStr(4));
-                        setInt(0, result != NULL ? 1 : 0);
-                        xmlFree(result);
-
-                        xmlFreeCatalog(nestedCatalog);
-                    }
-                }
-
-                endOp();
-                break;
-            }
-
             default:
                 break;
         }
@@ -489,9 +446,12 @@ LLVMFuzzerTestOneInput(const char *data, size_t size) {
         xmlFuzzCheckFailureReport(vars->opName, oomReport, ioReport);
     }
 
+end:
     for (i = 0; i < MAX_STR_REGS; i++)
-        if (vars->strings[i])
+        if (vars->strings[i]) {
             xmlFree(vars->strings[i]);
+            vars->strings[i] = NULL;
+        }
 
     for (i = 0; i < MAX_CAT_REGS; i++)
         if (vars->catalogs[i]) {
@@ -501,13 +461,12 @@ LLVMFuzzerTestOneInput(const char *data, size_t size) {
         }
 
     xmlFuzzInjectFailure(0);
-    xmlCatalogCleanup();
+    xmlCleanupParser();
     xmlFuzzDataCleanup();
     xmlResetLastError();
     return(0);
 }
 
-//TODO: to improve??
 size_t
 LLVMFuzzerCustomMutator(char *data, size_t size, size_t maxSize,
                         unsigned seed) {
-- 
2.49.0

